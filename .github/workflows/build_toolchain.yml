# Description: Build Toolchains using GitHub Actions

name: Build Toolschain

# Controls when the action will run. 
on: 
  schedule:
    - cron:  '0 0 1 */3 *'
  watch:
    types: [started]
  #push:
    #branches:
      #- dev

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Name the Job
    name: Build Toolschain Miples
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@master

      - name: Initialization environment & Installation depends
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get -y update
          sudo apt-get install -y gcc g++ gperf bison flex texinfo help2man make libncurses5-dev \
          python3-dev autoconf automake libtool libtool-bin gawk wget bzip2 xz-utils unzip \
          patch libstdc++6 rsync
      
      - name: Get source code
        run: |
          git clone https://github.com/crosstool-ng/crosstool-ng
          cd crosstool-ng
          mkdir src

      - name: Generate config file
        run: |
          cd crosstool-ng
          ./bootstrap && ./configure --enable-local && make
          mkdir -p samples/mipsel-linux-uclibc
          cd samples/mipsel-linux-uclibc
          wget https://cdn.jsdelivr.net/gh/AuroraFrowned/Building_Toolchains@dev/mipsel-linux-uclibc/crosstool.config
          wget https://cdn.jsdelivr.net/gh/AuroraFrowned/Building_Toolchains@dev/mipsel-linux-uclibc/reported.by
          wget https://cdn.jsdelivr.net/gh/AuroraFrowned/Building_Toolchains@dev/mipsel-linux-uclibc/uClibc.config
          cd ../..
          ./ct-ng mipsel-linux-uclibc
          ./ct-ng upgradeconfig

      - name: Build
        run: |
          cd crosstool-ng
          ./ct-ng clean
          ./ct-ng build.$(nproc)
          ./ct-ng version >> ${HOME}/x-tools/INFO.oe
          ./ct-ng show-tuple >> ${HOME}/x-tools/INFO.oe
          ./ct-ng show-mipsel-linux-uclibc >> ${HOME}/x-tools/INFO.oe
          
      - name: Compress toolchain
        run: |
          cd ${HOME}
          tar -zcvf x-tools.tar.gz x-tools

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with: 
          name: x-tools
          path: /home/runner/x-tools.tar.gz
